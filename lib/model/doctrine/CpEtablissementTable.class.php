<?php

/**
 * CpEtablissementTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class CpEtablissementTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object CpEtablissementTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('CpEtablissement');
    }

    /*
     * filtrage des societes (etablissements de type societe)
     */
    public function getEtablissementSociete(Doctrine_Query $q = null) {
        if (is_null($q)) {
            $q = Doctrine_Query::create()
            ->from('CpEtablissement ce');
        }

        $q->andWhere('ce.cp_etablissement_type_societe = 1');

        return $q;
    }

    /*
     * filtrage des etablissements (qui ne sont pas raison sociale)
     */
    public function getEtablissementEtb(Doctrine_Query $q = null) {
        if (is_null($q)) {
            $q = Doctrine_Query::create()
            ->from('CpEtablissement ce');
        }

        $q->andWhere('isnull(cp_etablissement_type_societe)');
        $q->orderBy('cp_etablissement_etablissement_nom');


        return $q;
    }

     /*
     * recherche des etablissements  
      * avec critere nom, statut, zone et ville
     */
    public function getEtablissementRecherche(Doctrine_Query $q = null, $nomEtb = null, $tabIdRs = null, $statut = null, $zone = null, $ville = null, $villeId = null ) {

        if (is_null($q)) {
            $q = Doctrine_Query::create()
            ->from('CpEtablissement ce')
            ->where('ce.cp_etablissement_type_societe IS NULL ')
             ;
        }

        if( $nomEtb != '' ){

            $nomEtbfiltre = "%".$nomEtb."%";

            $q->andWhere('ce.cp_etablissement_etablissement_nom like ?',$nomEtbfiltre);
        }

        if( $statut != ''){
            $q->andWhere('ce.cp_etablissement_cp_etablissement_statut_id = ?',$statut);
        }

        if( $zone != ''){
            $q->andWhere('ce.cp_etablissement_zone_id = ?',$zone);
        }

        if( $villeId != 0){

            $q->andWhere('ce.cp_etablissement_ville_id = ?',$villeId);
        }  elseif ($ville != '') {
            $outil = new Util();
            $chaine = $outil->extractCpLibelle($ville);
            $villeIdNew = Doctrine_Core::getTable('VilleFr')->getIdVille($chaine);
            $q->andWhere('ce.cp_etablissement_ville_id = ?',$villeIdNew);
        }
        
        if(!is_null($tabIdRs) && count($tabIdRs) !=0){
            $q->andWhereIn('ce.cp_etablissement_etablissement_pere_id',$tabIdRs);
        }


        return $q;
    }

    /*
     * recherche des Raisons sociales  (etablissements de type societe)
      * avec critere raison sociale et statut
     */
    public function getEtablissementRechercheRS(Doctrine_Query $q = null, $rs = null, $statut = null ) {

        if (is_null($q)) {
            $q = Doctrine_Query::create()
        //->select('*')
        ->from('CpEtablissement ce')
            ->where('ce.cp_etablissement_type_societe = 1')
                    ;
        }




        if( $rs != '' ){
            //$outil = new Util();
            //$rsfiltre = $outil->extractCpLibelle($rs);
            $rsfiltre = "%".$rs."%";

            $q->andWhere('ce.cp_etablissement_raison_social like ?',$rsfiltre);
        }

        if( $statut != ''){
            $q->andWhere('ce.cp_etablissement_cp_etablissement_statut_id = ?',$statut);
        }

        //$q->andWhere('ce.cp_etablissement_type_societe = 1');

        return $q;
    }
    
    /*
     * recuperation des id de raison sociale en fonction du libelle
     * 
     * retourne un tableau
     */
    public function getTabIdRs(Doctrine_Query $q = null, $nomRs = null ) {
         if (is_null($q)) {
            $q = Doctrine_Query::create()
            ->from('CpEtablissement ce')
            ->where('ce.cp_etablissement_type_societe = 1')
                    ;
        }
        
        if( $nomRs != '' ){

            $nomRsfiltre = "%".$nomRs."%";

            $q->andWhere('ce.cp_etablissement_raison_social like ?',$nomRsfiltre);
        }
        
        $listeRs = $q->execute();
        
        $tabIdRs = array();
        
        //mise en tableau des résultats
        foreach ($listeRs as $rs){
            $tabIdRs[$rs->getCpEtablissementId()] = $rs->getCpEtablissementId();
        }
        
        return $tabIdRs;
    }
    
    /*
     * recuperation des id des etabliseement en fonction du libelle
     * correspondant exactement  à l'établissement 
     * 
     * retourne un tableau de id
     * 
     * @param   int     $nomRs     premieres lettre de l'etablissement 
     * @return  array  $tabIdRs    tableau des id etablissement
     */
    public function getTabIdEtab2(Doctrine_Query $q = null, $nomRs = null ) {
         if (is_null($q)) {
            $q = Doctrine_Query::create()
            ->from('CpEtablissement ce')
            //->where('ce.cp_etablissement_type_societe = 1')
                    ;
        }
        
        $q->leftJoin('ce.CpEtablissement cers');
        
        if( $nomRs != '' ){

            //$nomRsfiltre = "%".$nomRs."%";
            $nomRsfiltre = $nomRs;

            $q->where('ce.cp_etablissement_etablissement_nom = ?',$nomRsfiltre);
            //$q->orWhere('cers.cp_etablissement_raison_social like ?',$nomRsfiltre);
        }
        
        $listeRs = $q->execute();
        
        $tabIdRs = array();
        
        //mise en tableau des résultats
        foreach ($listeRs as $rs){
            $tabIdRs[$rs->getCpEtablissementId()] = $rs->getCpEtablissementId();
        }
        
        return $tabIdRs;
    }
    
    /*
     * recuperation des id des etabliseement en fonction du libelle
     * correspondant soit à l'établissement ou la raison sociale
     * 
     * retourne un tableau de id
     * 
     * @param   int     $nomRs     premieres lettre de l'etablissement 
     * @return  array  $tabIdRs    tableau des id etablissement
     */
    public function getTabIdEtab(Doctrine_Query $q = null, $nomRs = null ) {
         if (is_null($q)) {
            $q = Doctrine_Query::create()
            ->from('CpEtablissement ce')
            //->where('ce.cp_etablissement_type_societe = 1')
                    ;
        }
        
        $q->leftJoin('ce.CpEtablissement cers');
        
        if( $nomRs != '' ){

            $nomRsfiltre = "%".$nomRs."%";

            $q->where('ce.cp_etablissement_etablissement_nom like ?',$nomRsfiltre);
            $q->orWhere('cers.cp_etablissement_raison_social like ?',$nomRsfiltre);
        }
        
        $listeRs = $q->execute();
        
        $tabIdRs = array();
        
        //mise en tableau des résultats
        foreach ($listeRs as $rs){
            $tabIdRs[$rs->getCpEtablissementId()] = $rs->getCpEtablissementId();
        }
        
        return $tabIdRs;
    }
    
    /*
     * recuperation des id des etabliseement en fonction du libelle
     * correspondant soit à l'établissement ou la raison sociale
     * 
     * retourne un tableau de id
     * 
     * @param   int     $nomRs     premieres lettre de l'etablissement 
     * @return  int     $idEtab    id etablissement
     */
    public function getIdEtabParLibel(Doctrine_Query $q = null, $nomRs = null ) {
         if (is_null($q)) {
            $q = Doctrine_Query::create()
            ->from('CpEtablissement ce')
            ->where('ce.cp_etablissement_type_societe != 1')
                    ;
        }
        
        $idEtab = 0;

        
        if( $nomRs != '' ){

            $nomRsfiltre = trim($nomRs);

            $q->where('ce.cp_etablissement_etablissement_nom = ?',$nomRsfiltre);
            
            $etab = $q->fetchOne();
            
            $idEtab = $etab['cp_etablissement_id'];
            
        }else{
            $idEtab = 0;
        }
        

        
        return $idEtab;
    }
    
    /*
     * recuperation de l'id d'es'une raison socilae etabliseement en fonction du libelle
     * correspondant  à l'établissement 
     * 
     * retourne un  id
     * 
     * @param   int     $nomRs     nom de la RS 
     * @return  int     $idEtab    id etablissement
     */
    public function getIdRsParLibel(Doctrine_Query $q = null, $nomRs = null ) {
         if (is_null($q)) {
            $q = Doctrine_Query::create()
            ->from('CpEtablissement ce')
            ->where('ce.cp_etablissement_type_societe == 1')
                    ;
        }
        
        $idEtab = 0;

        
        if( $nomRs != '' ){

            $nomRsfiltre = trim($nomRs);

            $q->where('ce.cp_etablissement_raison_social = ?',$nomRsfiltre);
            
            $etab = $q->fetchOne();
            
            $idEtab = $etab['cp_etablissement_id'];
            
        }else{
            $idEtab = 0;
        }
        

        
        return $idEtab;
    }

}