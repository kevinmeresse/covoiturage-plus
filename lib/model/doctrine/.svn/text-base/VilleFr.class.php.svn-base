<?php

/**
 * VilleFr
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    roulezmailn_v3
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class VilleFr extends BaseVilleFr {
    public function __toString() {
        if($this->getNomVille() != ''){
            return $this->getNomVille();
        }else{
            return '';
        }
        
    }
    
    /*
     * récupération des enregistrements de ville à partir
     * des lettres de départ
     */

    public function getVilleAutocomplet($value) {

        //récupération des enregistrements
        $villesDepartListe = Doctrine_Query::create()
                ->select('nom_ville')
                ->from('VilleFr')
                //->where('nom_ville2 like \'' . $value . '%\'')
                //->orderBy('nom_ville2')
                ->where('nom_ville like \'' . $value . '%\'')
                ->orderBy('nom_ville')
                ->limit('20')
                ->execute();

        $results = "";

        if ($villesDepartListe->count() != 0) {

            foreach ($villesDepartListe as $ville) {
                if(strlen($ville->getCodePostal()) == 4){
                    $cp_ville = '0'.$ville->getCodePostal();
                }else{
                    $cp_ville = $ville->getCodePostal();
                }
                $results .= $ville->getNomVille() ." (".$cp_ville.")\r\n";
            }
        }

       return $results;

    }
    
    //retourne l'id d'une ville pour un libelle fournit
    public function getIdVilleParLibelle($libelle = null) {
        if (is_null($libelle)) {
            return 0;
        }
        
        

        $villeid = Doctrine_Query::create()
                    ->select('v.id_ville')
                    ->from('VilleFr v')
                    ->where('nom_ville = ?',$libelle)
                ->fetchOne();
                    //->execute();

        return $villeid;
    }
    
    
    //retourne le code pays concaténé à l'id de la ville =>ex: fr-3657
    public function getConcatPaysVille()
    {
        return strtolower($this->getPaysMonde()->getCodePays())."-".$this->getIdVille();
    }
    
    
}
