<?php

/**
 * CpTypeActionTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class CpTypeActionTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object CpTypeActionTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('CpTypeAction');
    }
    
    /*
     * retourne les actions classées par ordre en fonction du statut
      * 
      * @return object CpTypeActionStatutTable
     */
    public function getActionParStatutParOrdre(Doctrine_Query $q = null, $id_statut = null, $cp_type_action_cible = 0, $execute = null) {
        if (is_null($q)) {
            $q = Doctrine_Query::create()
            ->from('CpTypeAction ce');
        }
        if($id_statut != null){
            $q->where('ce.cp_type_action_statut_id = ?',$id_statut);
        } else {
            $q->where('ce.cp_type_action_statut_id = 1');
        }
        
        $q->andWhere('cp_type_action_cible = ?',$cp_type_action_cible);
        
        $q->orderBy('ce.cp_type_action_ordre ASC');
        
        if($execute != null){
            return $q->execute();
        }else{
            return $q;
        }

        
    }
    
    /*
     * retourne les actions classées par ordre en fonction du statut et avec 
     * un identifiant css pour marquer les champ deja enregistrés
      * 
      * @return object CpTypeActionStatutTable
     */
    public function getActionParStatutParOrdrePourCovoitEtTrajet(
            Doctrine_Query $q = null, 
            $id_statut = null, 
            $id_covoitureur = null,
            $id_trajet = null,
            $cp_type_action_cible = 0, 
            $execute = null
            ) {
        
        if (is_null($q)) {
            $q = Doctrine_Query::create()
            ->from('CpTypeAction cta');
        }
         /*
            $q = Doctrine_Query::create();
            $q->select('cta.cp_type_action_id , cta.cp_type_action_nom , cc.cp_action_cv_id as cac');
            $q->from('CpTypeAction cta');
         * 
         */
//$q->select('cta.cp_type_action_id as cp_type_action_id, cta.cp_type_action_nom as cp_type_action_nom, cc.cp_action_cv_id as cp_action_cv_id');
        $q->select('cta.*, cc.cp_action_cv_id as cp_action_cv_id');
            
            $q->leftJoin('cta.CpActionCv cc ON cta.cp_type_action_id = cc.cp_action_cv_cp_type_action_id AND cc.cp_action_cv_covoitureur_id=? AND cc.cp_action_cv_trajet_id = ?',
                     array($id_covoitureur,$id_trajet));

        if($id_statut != null){
            $q->where('cta.cp_type_action_statut_id = ?',$id_statut);
        } else {
            $q->where('cta.cp_type_action_statut_id = 1');
        }
        
        $q->andWhere('cta.cp_type_action_cible = ?',$cp_type_action_cible);
        
        $q->orderBy('cta.cp_type_action_ordre ASC');
        
        /*
        if($execute != null){
            return $q->execute();
        }else{
            return $q;
        }
        */
        switch ($execute){
            case 0;
                return $q;
                break;
            case 1;
                return $q->execute();
                break;
            case 2;
                return $q->fetchArray();
                break;
            case 3;
                return $q->getSqlQuery();
                break;
        }

        
    }
    
    /**
     * Returns an instance of this class.
     *
     * @return object CpTrajetTable
     */
    public function getListeNonLieeStatut()
    {
        /*
        return Doctrine_Core::getTable('CpTypeAction')
                ->where('cp_type_action_statut_id is null')
                ;
        */
        
         $q = Doctrine_Query::create()
            ->from('CpTypeAction cta')
            ->where('cta.cp_type_action_statut_id is null')
                 ;
         $q->andWhere('cta.cp_type_action_cible = 0');
        
        $q->orderBy('cta.cp_type_action_ordre ASC');
         
         return $q;
    }
}