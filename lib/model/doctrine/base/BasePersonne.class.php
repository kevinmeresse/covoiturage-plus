<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Personne', 'dbrmv3');

/**
 * BasePersonne
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_personne
 * @property string $cle
 * @property integer $etat
 * @property timestamp $date_creation
 * @property string $identifiant
 * @property string $mot_de_passe
 * @property integer $sexe
 * @property integer $civilite
 * @property string $nom
 * @property string $prenom
 * @property string $adresse
 * @property integer $code_postal
 * @property string $ville
 * @property string $mail
 * @property string $telephone_fixe
 * @property string $telephone_mobile
 * @property string $societe
 * @property integer $tranche_age
 * @property date $date_naissance
 * @property string $question
 * @property string $reponse
 * @property timestamp $date_derniere_connexion
 * @property integer $nombre_connexion
 * 
 * @method integer   getIdPersonne()              Returns the current record's "id_personne" value
 * @method string    getCle()                     Returns the current record's "cle" value
 * @method integer   getEtat()                    Returns the current record's "etat" value
 * @method timestamp getDateCreation()            Returns the current record's "date_creation" value
 * @method string    getIdentifiant()             Returns the current record's "identifiant" value
 * @method string    getMotDePasse()              Returns the current record's "mot_de_passe" value
 * @method integer   getSexe()                    Returns the current record's "sexe" value
 * @method integer   getCivilite()                Returns the current record's "civilite" value
 * @method string    getNom()                     Returns the current record's "nom" value
 * @method string    getPrenom()                  Returns the current record's "prenom" value
 * @method string    getAdresse()                 Returns the current record's "adresse" value
 * @method integer   getCodePostal()              Returns the current record's "code_postal" value
 * @method string    getVille()                   Returns the current record's "ville" value
 * @method string    getMail()                    Returns the current record's "mail" value
 * @method string    getTelephoneFixe()           Returns the current record's "telephone_fixe" value
 * @method string    getTelephoneMobile()         Returns the current record's "telephone_mobile" value
 * @method string    getSociete()                 Returns the current record's "societe" value
 * @method integer   getTrancheAge()              Returns the current record's "tranche_age" value
 * @method date      getDateNaissance()           Returns the current record's "date_naissance" value
 * @method string    getQuestion()                Returns the current record's "question" value
 * @method string    getReponse()                 Returns the current record's "reponse" value
 * @method timestamp getDateDerniereConnexion()   Returns the current record's "date_derniere_connexion" value
 * @method integer   getNombreConnexion()         Returns the current record's "nombre_connexion" value
 * @method Personne  setIdPersonne()              Sets the current record's "id_personne" value
 * @method Personne  setCle()                     Sets the current record's "cle" value
 * @method Personne  setEtat()                    Sets the current record's "etat" value
 * @method Personne  setDateCreation()            Sets the current record's "date_creation" value
 * @method Personne  setIdentifiant()             Sets the current record's "identifiant" value
 * @method Personne  setMotDePasse()              Sets the current record's "mot_de_passe" value
 * @method Personne  setSexe()                    Sets the current record's "sexe" value
 * @method Personne  setCivilite()                Sets the current record's "civilite" value
 * @method Personne  setNom()                     Sets the current record's "nom" value
 * @method Personne  setPrenom()                  Sets the current record's "prenom" value
 * @method Personne  setAdresse()                 Sets the current record's "adresse" value
 * @method Personne  setCodePostal()              Sets the current record's "code_postal" value
 * @method Personne  setVille()                   Sets the current record's "ville" value
 * @method Personne  setMail()                    Sets the current record's "mail" value
 * @method Personne  setTelephoneFixe()           Sets the current record's "telephone_fixe" value
 * @method Personne  setTelephoneMobile()         Sets the current record's "telephone_mobile" value
 * @method Personne  setSociete()                 Sets the current record's "societe" value
 * @method Personne  setTrancheAge()              Sets the current record's "tranche_age" value
 * @method Personne  setDateNaissance()           Sets the current record's "date_naissance" value
 * @method Personne  setQuestion()                Sets the current record's "question" value
 * @method Personne  setReponse()                 Sets the current record's "reponse" value
 * @method Personne  setDateDerniereConnexion()   Sets the current record's "date_derniere_connexion" value
 * @method Personne  setNombreConnexion()         Sets the current record's "nombre_connexion" value
 * 
 * @package    roulezmailn_v3
 * @subpackage model
 * @author     RoulezMalin <technique@roulezmalin.fr>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePersonne extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('personne');
        $this->hasColumn('id_personne', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('cle', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('etat', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('date_creation', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00 00:00:00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('identifiant', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('mot_de_passe', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('sexe', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('civilite', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('nom', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('prenom', 'string', 200, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 200,
             ));
        $this->hasColumn('adresse', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('code_postal', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('ville', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('mail', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('telephone_fixe', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('telephone_mobile', 'string', 20, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('societe', 'string', 250, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 250,
             ));
        $this->hasColumn('tranche_age', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('date_naissance', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('question', 'string', 250, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 250,
             ));
        $this->hasColumn('reponse', 'string', 250, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 250,
             ));
        $this->hasColumn('date_derniere_connexion', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('nombre_connexion', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}