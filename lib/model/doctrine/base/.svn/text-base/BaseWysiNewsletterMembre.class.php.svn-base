<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('WysiNewsletterMembre', 'dbrmv3');

/**
 * BaseWysiNewsletterMembre
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $id_newsletter_categorie
 * @property string $mail
 * @property integer $etat
 * @property timestamp $date_creation
 * @property string $cle
 * @property string $langue
 * @property string $nom
 * @property string $prenom
 * @property string $societe
 * @property integer $type_inscription
 * 
 * @method integer              getId()                      Returns the current record's "id" value
 * @method integer              getIdNewsletterCategorie()   Returns the current record's "id_newsletter_categorie" value
 * @method string               getMail()                    Returns the current record's "mail" value
 * @method integer              getEtat()                    Returns the current record's "etat" value
 * @method timestamp            getDateCreation()            Returns the current record's "date_creation" value
 * @method string               getCle()                     Returns the current record's "cle" value
 * @method string               getLangue()                  Returns the current record's "langue" value
 * @method string               getNom()                     Returns the current record's "nom" value
 * @method string               getPrenom()                  Returns the current record's "prenom" value
 * @method string               getSociete()                 Returns the current record's "societe" value
 * @method integer              getTypeInscription()         Returns the current record's "type_inscription" value
 * @method WysiNewsletterMembre setId()                      Sets the current record's "id" value
 * @method WysiNewsletterMembre setIdNewsletterCategorie()   Sets the current record's "id_newsletter_categorie" value
 * @method WysiNewsletterMembre setMail()                    Sets the current record's "mail" value
 * @method WysiNewsletterMembre setEtat()                    Sets the current record's "etat" value
 * @method WysiNewsletterMembre setDateCreation()            Sets the current record's "date_creation" value
 * @method WysiNewsletterMembre setCle()                     Sets the current record's "cle" value
 * @method WysiNewsletterMembre setLangue()                  Sets the current record's "langue" value
 * @method WysiNewsletterMembre setNom()                     Sets the current record's "nom" value
 * @method WysiNewsletterMembre setPrenom()                  Sets the current record's "prenom" value
 * @method WysiNewsletterMembre setSociete()                 Sets the current record's "societe" value
 * @method WysiNewsletterMembre setTypeInscription()         Sets the current record's "type_inscription" value
 * 
 * @package    roulezmailn_v3
 * @subpackage model
 * @author     RoulezMalin
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseWysiNewsletterMembre extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('wysi_newsletter_membre');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'autoincrement' => true,
             'primary' => true,
             'length' => 8,
             ));
        $this->hasColumn('id_newsletter_categorie', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('mail', 'string', 250, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 250,
             ));
        $this->hasColumn('etat', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('date_creation', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('cle', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('langue', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => 'fr',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('nom', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('prenom', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('societe', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('type_inscription', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}