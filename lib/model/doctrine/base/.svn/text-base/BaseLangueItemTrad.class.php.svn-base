<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('LangueItemTrad', 'dbrmv3');

/**
 * BaseLangueItemTrad
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_langue
 * @property integer $id_item
 * @property integer $id_page
 * @property string $trad
 * @property LangueItem $LangueItem
 * @property LanguePage $LanguePage
 * 
 * @method integer        getIdLangue()   Returns the current record's "id_langue" value
 * @method integer        getIdItem()     Returns the current record's "id_item" value
 * @method integer        getIdPage()     Returns the current record's "id_page" value
 * @method string         getTrad()       Returns the current record's "trad" value
 * @method LangueItem     getLangueItem() Returns the current record's "LangueItem" value
 * @method LanguePage     getLanguePage() Returns the current record's "LanguePage" value
 * @method LangueItemTrad setIdLangue()   Sets the current record's "id_langue" value
 * @method LangueItemTrad setIdItem()     Sets the current record's "id_item" value
 * @method LangueItemTrad setIdPage()     Sets the current record's "id_page" value
 * @method LangueItemTrad setTrad()       Sets the current record's "trad" value
 * @method LangueItemTrad setLangueItem() Sets the current record's "LangueItem" value
 * @method LangueItemTrad setLanguePage() Sets the current record's "LanguePage" value
 * 
 * @package    roulezmailn_v3
 * @subpackage model
 * @author     RoulezMalin <technique@roulezmalin.fr>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseLangueItemTrad extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('langue_item_trad');
        $this->hasColumn('id_langue', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_item', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_page', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('trad', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('LangueItem', array(
             'local' => 'id_item',
             'foreign' => 'id_item'));

        $this->hasOne('LanguePage', array(
             'local' => 'id_page',
             'foreign' => 'id_page'));
    }
}