<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Parking', 'dbrmv3');

/**
 * BaseParking
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_parking
 * @property string $cle
 * @property integer $etat
 * @property timestamp $date_creation
 * @property string $nom_parking
 * @property string $description
 * @property integer $x
 * @property integer $y
 * @property integer $id_commune
 * @property Commune $Commune
 * 
 * @method integer   getIdParking()     Returns the current record's "id_parking" value
 * @method string    getCle()           Returns the current record's "cle" value
 * @method integer   getEtat()          Returns the current record's "etat" value
 * @method timestamp getDateCreation()  Returns the current record's "date_creation" value
 * @method string    getNomParking()    Returns the current record's "nom_parking" value
 * @method string    getDescription()   Returns the current record's "description" value
 * @method integer   getX()             Returns the current record's "x" value
 * @method integer   getY()             Returns the current record's "y" value
 * @method integer   getIdCommune()     Returns the current record's "id_commune" value
 * @method Commune   getCommune()       Returns the current record's "Commune" value
 * @method Parking   setIdParking()     Sets the current record's "id_parking" value
 * @method Parking   setCle()           Sets the current record's "cle" value
 * @method Parking   setEtat()          Sets the current record's "etat" value
 * @method Parking   setDateCreation()  Sets the current record's "date_creation" value
 * @method Parking   setNomParking()    Sets the current record's "nom_parking" value
 * @method Parking   setDescription()   Sets the current record's "description" value
 * @method Parking   setX()             Sets the current record's "x" value
 * @method Parking   setY()             Sets the current record's "y" value
 * @method Parking   setIdCommune()     Sets the current record's "id_commune" value
 * @method Parking   setCommune()       Sets the current record's "Commune" value
 * 
 * @package    roulezmailn_v3
 * @subpackage model
 * @author     RoulezMalin <technique@roulezmalin.fr>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseParking extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('parking');
        $this->hasColumn('id_parking', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('cle', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('etat', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('date_creation', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00 00:00:00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('nom_parking', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('description', 'string', 250, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 250,
             ));
        $this->hasColumn('x', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('y', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_commune', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Commune', array(
             'local' => 'id_commune',
             'foreign' => 'id_commune'));
    }
}