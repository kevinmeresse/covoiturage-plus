<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ContenuActualiteRubrique', 'dbrmv3');

/**
 * BaseContenuActualiteRubrique
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_actualite_rubrique
 * @property integer $id_site
 * @property string $cle
 * @property integer $etat
 * @property timestamp $date_creation
 * @property timestamp $date_modification
 * @property integer $nombre_visualisation
 * @property string $fr_titre
 * @property string $en_titre
 * @property integer $id_createur
 * @property SiteClient $SiteClient
 * @property sfGuardUser $sfGuardUser
 * @property ContenuActualite $ContenuActualite
 * 
 * @method integer                  getIdActualiteRubrique()   Returns the current record's "id_actualite_rubrique" value
 * @method integer                  getIdSite()                Returns the current record's "id_site" value
 * @method string                   getCle()                   Returns the current record's "cle" value
 * @method integer                  getEtat()                  Returns the current record's "etat" value
 * @method timestamp                getDateCreation()          Returns the current record's "date_creation" value
 * @method timestamp                getDateModification()      Returns the current record's "date_modification" value
 * @method integer                  getNombreVisualisation()   Returns the current record's "nombre_visualisation" value
 * @method string                   getFrTitre()               Returns the current record's "fr_titre" value
 * @method string                   getEnTitre()               Returns the current record's "en_titre" value
 * @method integer                  getIdCreateur()            Returns the current record's "id_createur" value
 * @method SiteClient               getSiteClient()            Returns the current record's "SiteClient" value
 * @method sfGuardUser              getSfGuardUser()           Returns the current record's "sfGuardUser" value
 * @method ContenuActualite         getContenuActualite()      Returns the current record's "ContenuActualite" value
 * @method ContenuActualiteRubrique setIdActualiteRubrique()   Sets the current record's "id_actualite_rubrique" value
 * @method ContenuActualiteRubrique setIdSite()                Sets the current record's "id_site" value
 * @method ContenuActualiteRubrique setCle()                   Sets the current record's "cle" value
 * @method ContenuActualiteRubrique setEtat()                  Sets the current record's "etat" value
 * @method ContenuActualiteRubrique setDateCreation()          Sets the current record's "date_creation" value
 * @method ContenuActualiteRubrique setDateModification()      Sets the current record's "date_modification" value
 * @method ContenuActualiteRubrique setNombreVisualisation()   Sets the current record's "nombre_visualisation" value
 * @method ContenuActualiteRubrique setFrTitre()               Sets the current record's "fr_titre" value
 * @method ContenuActualiteRubrique setEnTitre()               Sets the current record's "en_titre" value
 * @method ContenuActualiteRubrique setIdCreateur()            Sets the current record's "id_createur" value
 * @method ContenuActualiteRubrique setSiteClient()            Sets the current record's "SiteClient" value
 * @method ContenuActualiteRubrique setSfGuardUser()           Sets the current record's "sfGuardUser" value
 * @method ContenuActualiteRubrique setContenuActualite()      Sets the current record's "ContenuActualite" value
 * 
 * @package    roulezmailn_v3
 * @subpackage model
 * @author     RoulezMalin <technique@roulezmalin.fr>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseContenuActualiteRubrique extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('contenu_actualite_rubrique');
        $this->hasColumn('id_actualite_rubrique', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('id_site', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('cle', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('etat', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('date_creation', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('date_modification', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('nombre_visualisation', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fr_titre', 'string', 250, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 250,
             ));
        $this->hasColumn('en_titre', 'string', 250, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 250,
             ));
        $this->hasColumn('id_createur', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('SiteClient', array(
             'local' => 'id_site',
             'foreign' => 'id_site_client'));

        $this->hasOne('sfGuardUser', array(
             'local' => 'id_createur',
             'foreign' => 'id'));

        $this->hasOne('ContenuActualite', array(
             'local' => 'id_actualite_rubrique',
             'foreign' => 'id_rubrique'));
    }
}