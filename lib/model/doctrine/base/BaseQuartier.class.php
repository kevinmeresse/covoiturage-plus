<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Quartier', 'dbrmv3');

/**
 * BaseQuartier
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_quartier
 * @property string $nom_quartier
 * @property integer $x
 * @property integer $y
 * @property integer $id_commune
 * @property Commune $Commune
 * 
 * @method integer  getIdQuartier()   Returns the current record's "id_quartier" value
 * @method string   getNomQuartier()  Returns the current record's "nom_quartier" value
 * @method integer  getX()            Returns the current record's "x" value
 * @method integer  getY()            Returns the current record's "y" value
 * @method integer  getIdCommune()    Returns the current record's "id_commune" value
 * @method Commune  getCommune()      Returns the current record's "Commune" value
 * @method Quartier setIdQuartier()   Sets the current record's "id_quartier" value
 * @method Quartier setNomQuartier()  Sets the current record's "nom_quartier" value
 * @method Quartier setX()            Sets the current record's "x" value
 * @method Quartier setY()            Sets the current record's "y" value
 * @method Quartier setIdCommune()    Sets the current record's "id_commune" value
 * @method Quartier setCommune()      Sets the current record's "Commune" value
 * 
 * @package    roulezmailn_v3
 * @subpackage model
 * @author     RoulezMalin <technique@roulezmalin.fr>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseQuartier extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('quartier');
        $this->hasColumn('id_quartier', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('nom_quartier', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('x', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('y', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_commune', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Commune', array(
             'local' => 'id_commune',
             'foreign' => 'id_commune'));
    }
}