<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('VilleFrV1', 'dbrmv3');

/**
 * BaseVilleFrV1
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_ville
 * @property integer $id_pays
 * @property string $nom_ville
 * @property string $nom_ville2
 * @property float $latitude
 * @property float $longitude
 * @property integer $code_postal
 * @property integer $code_insee
 * @property string $departement
 * @property integer $departement_num
 * @property integer $region_num
 * @property integer $chef_lieu
 * @property PaysMonde $PaysMonde
 * 
 * @method integer   getIdVille()         Returns the current record's "id_ville" value
 * @method integer   getIdPays()          Returns the current record's "id_pays" value
 * @method string    getNomVille()        Returns the current record's "nom_ville" value
 * @method string    getNomVille2()       Returns the current record's "nom_ville2" value
 * @method float     getLatitude()        Returns the current record's "latitude" value
 * @method float     getLongitude()       Returns the current record's "longitude" value
 * @method integer   getCodePostal()      Returns the current record's "code_postal" value
 * @method integer   getCodeInsee()       Returns the current record's "code_insee" value
 * @method string    getDepartement()     Returns the current record's "departement" value
 * @method integer   getDepartementNum()  Returns the current record's "departement_num" value
 * @method integer   getRegionNum()       Returns the current record's "region_num" value
 * @method integer   getChefLieu()        Returns the current record's "chef_lieu" value
 * @method PaysMonde getPaysMonde()       Returns the current record's "PaysMonde" value
 * @method VilleFrV1 setIdVille()         Sets the current record's "id_ville" value
 * @method VilleFrV1 setIdPays()          Sets the current record's "id_pays" value
 * @method VilleFrV1 setNomVille()        Sets the current record's "nom_ville" value
 * @method VilleFrV1 setNomVille2()       Sets the current record's "nom_ville2" value
 * @method VilleFrV1 setLatitude()        Sets the current record's "latitude" value
 * @method VilleFrV1 setLongitude()       Sets the current record's "longitude" value
 * @method VilleFrV1 setCodePostal()      Sets the current record's "code_postal" value
 * @method VilleFrV1 setCodeInsee()       Sets the current record's "code_insee" value
 * @method VilleFrV1 setDepartement()     Sets the current record's "departement" value
 * @method VilleFrV1 setDepartementNum()  Sets the current record's "departement_num" value
 * @method VilleFrV1 setRegionNum()       Sets the current record's "region_num" value
 * @method VilleFrV1 setChefLieu()        Sets the current record's "chef_lieu" value
 * @method VilleFrV1 setPaysMonde()       Sets the current record's "PaysMonde" value
 * 
 * @package    roulezmailn_v3
 * @subpackage model
 * @author     RoulezMalin <technique@roulezmalin.fr>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseVilleFrV1 extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ville_fr_v1');
        $this->hasColumn('id_ville', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('id_pays', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('nom_ville', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('nom_ville2', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('latitude', 'float', 14, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 14,
             ));
        $this->hasColumn('longitude', 'float', 14, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 14,
             ));
        $this->hasColumn('code_postal', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('code_insee', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('departement', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('departement_num', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('region_num', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('chef_lieu', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('PaysMonde', array(
             'local' => 'id_pays',
             'foreign' => 'id_pays'));
    }
}