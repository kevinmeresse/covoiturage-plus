<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('LieuTest', 'dbrmv3');

/**
 * BaseLieuTest
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_lieu
 * @property integer $bascule_insee
 * @property integer $id_site
 * @property integer $id_site_site
 * @property integer $id_pour_partenaire
 * @property string $libelle_lieu
 * @property integer $id_lieu_type
 * @property string $code_insee
 * @property timestamp $date_creation
 * @property timestamp $date_modification
 * @property date $date_publication
 * @property date $date_depublication
 * @property integer $visible_dans_liste
 * @property float $latitude
 * @property float $longitude
 * @property SiteClient $SiteClient
 * @property LieuType $LieuType
 * 
 * @method integer    getIdLieu()             Returns the current record's "id_lieu" value
 * @method integer    getBasculeInsee()       Returns the current record's "bascule_insee" value
 * @method integer    getIdSite()             Returns the current record's "id_site" value
 * @method integer    getIdSiteSite()         Returns the current record's "id_site_site" value
 * @method integer    getIdPourPartenaire()   Returns the current record's "id_pour_partenaire" value
 * @method string     getLibelleLieu()        Returns the current record's "libelle_lieu" value
 * @method integer    getIdLieuType()         Returns the current record's "id_lieu_type" value
 * @method string     getCodeInsee()          Returns the current record's "code_insee" value
 * @method timestamp  getDateCreation()       Returns the current record's "date_creation" value
 * @method timestamp  getDateModification()   Returns the current record's "date_modification" value
 * @method date       getDatePublication()    Returns the current record's "date_publication" value
 * @method date       getDateDepublication()  Returns the current record's "date_depublication" value
 * @method integer    getVisibleDansListe()   Returns the current record's "visible_dans_liste" value
 * @method float      getLatitude()           Returns the current record's "latitude" value
 * @method float      getLongitude()          Returns the current record's "longitude" value
 * @method SiteClient getSiteClient()         Returns the current record's "SiteClient" value
 * @method LieuType   getLieuType()           Returns the current record's "LieuType" value
 * @method LieuTest   setIdLieu()             Sets the current record's "id_lieu" value
 * @method LieuTest   setBasculeInsee()       Sets the current record's "bascule_insee" value
 * @method LieuTest   setIdSite()             Sets the current record's "id_site" value
 * @method LieuTest   setIdSiteSite()         Sets the current record's "id_site_site" value
 * @method LieuTest   setIdPourPartenaire()   Sets the current record's "id_pour_partenaire" value
 * @method LieuTest   setLibelleLieu()        Sets the current record's "libelle_lieu" value
 * @method LieuTest   setIdLieuType()         Sets the current record's "id_lieu_type" value
 * @method LieuTest   setCodeInsee()          Sets the current record's "code_insee" value
 * @method LieuTest   setDateCreation()       Sets the current record's "date_creation" value
 * @method LieuTest   setDateModification()   Sets the current record's "date_modification" value
 * @method LieuTest   setDatePublication()    Sets the current record's "date_publication" value
 * @method LieuTest   setDateDepublication()  Sets the current record's "date_depublication" value
 * @method LieuTest   setVisibleDansListe()   Sets the current record's "visible_dans_liste" value
 * @method LieuTest   setLatitude()           Sets the current record's "latitude" value
 * @method LieuTest   setLongitude()          Sets the current record's "longitude" value
 * @method LieuTest   setSiteClient()         Sets the current record's "SiteClient" value
 * @method LieuTest   setLieuType()           Sets the current record's "LieuType" value
 * 
 * @package    roulezmailn_v3
 * @subpackage model
 * @author     RoulezMalin <technique@roulezmalin.fr>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseLieuTest extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('lieu_test');
        $this->hasColumn('id_lieu', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('bascule_insee', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('id_site', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_site_site', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_pour_partenaire', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('libelle_lieu', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('id_lieu_type', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('code_insee', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('date_creation', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('date_modification', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('date_publication', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('date_depublication', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('visible_dans_liste', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('latitude', 'float', 14, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 14,
             ));
        $this->hasColumn('longitude', 'float', 14, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 14,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('SiteClient', array(
             'local' => 'id_site_site',
             'foreign' => 'id_site_client'));

        $this->hasOne('LieuType', array(
             'local' => 'id_lieu_type',
             'foreign' => 'id_lieu_type'));
    }
}