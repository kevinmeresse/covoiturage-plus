<?php

/**
 * TrajetMiseEnRelationTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class TrajetMiseEnRelationTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object TrajetMiseEnRelationTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('TrajetMiseEnRelation');
    }
    
    //filtrage des trajets en fonction du site (id_site)
    public function getTrajetMerSite(Doctrine_Query $q = null, $param = null) {
        if (is_null($q)) {
            $q = Doctrine_Query::create()
                    //->select('t.id_lieu')
                    ->from('TrajetMiseEnRelation t');
        }

        $q->andWhere('t.id_site = ?', sfConfig::get('sf_id_site_client'));

        if( $param != null && $param !=''){
            $q->andWhere('t.etat = ?', $param);
        }
        $q->orderBy('date_envoi DESC');

        return $q;
    }

    /*
     * détermine le nombre de MER pour un trajet
     */

     public function getNbMerPourTrajet( $id_trajet = null) {
        $q = Doctrine_Query::create()
                    ->select('COUNT(*) as nb_trajet')
                    ->from('TrajetMiseEnRelation t');

        $q->where('t.id_site = ?', sfConfig::get('sf_id_site_client'));
        $q->andWhere('t.id_trajet = ?', $id_trajet);

        $trajet = $q->fetchArray();

        return $trajet[0]['nb_trajet'];

    }

    /*
     * retourne la liste des MER pour 1 trajet
     */

     public function getListeMerTrajet( $id_trajet = null) {
        $q = Doctrine_Query::create()
                    ->select('id_trajet_mise_en_relation')
                    ->from('TrajetMiseEnRelation t');

        $q->where('t.id_site = ?', sfConfig::get('sf_id_site_client'));
        $q->andWhere('t.id_trajet = ?', $id_trajet);

        $trajets = $q->execute();

        $tabCpTrajetId = array();

        foreach ($trajets as $trajet) {

                $tabCpTrajetId[$trajet->getIdTrajetMiseEnRelation()] =  $trajet->getIdTrajetMiseEnRelation();

        }

        if(count($tabCpTrajetId) != 0){
            return $tabCpTrajetId;
        } else {
            return $tabCpTrajetId;
        }

    }
    
    /*
     * retourne la liste des Mer datant de 15 jours et non loggée
     */
    public function getListeMerA15Jours(Doctrine_Query $q = null, $param = null) {
        //recupération du nombre de jours de délai
        $nbJour = sfConfig::get('sf_batch_suivi_mer_nb_jour') ;
        
        
        //requete
        if (is_null($q)) {
            $q = Doctrine_Query::create()
                    //->select('t.id_lieu')
                    ->from('TrajetMiseEnRelation t');
        }
        
        
       //$q->i 

        $q->innerJoin('t.Trajet tj');
        $q->leftJoin('t.LogSite ls ');
        $q->leftJoin('t.Covoitureur cd');
        $q->leftJoin('t.Covoitureur cc');
        $q->select('t.id_trajet_mise_en_relation as id_mer, cd.mail as cd_mail, cd.id_utilisateur as cd_id_utilisateur, 
            cc.nom as cc_nom , cc.prenom as cc_prenom , tj.depart_ville as depart_ville, tj.destination_ville as destination_ville');
        $q->where('t.id_trajet  = tj.id_trajet');
        $q->andWhere('t.id_site = ?', sfConfig::get('sf_id_site_client'));
        //$q->andWhere('t.date_creation = ?', sfConfig::get('sf_id_site_client'));
        $q->andWhere('DATE_FORMAT(date_creation,"%Y-%m-%d") = DATE_FORMAT(date_sub(NOW(),INTERVAL ? DAY),"%Y-%m-%d")',$nbJour);
        $q->andWhere('ls.id_log_site IS NULL');
        $q->andWhere('t.id_demandeur != 0');
        
        /*
        SELECT * 
        FROM `trajet_mise_en_relation` 
        WHERE DATE_FORMAT(`date_creation`,'%Y-%m-%d') = DATE_FORMAT(date_sub(NOW(),INTERVAL 35 DAY),'%Y-%m-%d');
         * 
         */



        return $q->execute();
    }
    
    /************************************************************************/
    /*         Methodes pour les statistiques                               */
    /************************************************************************/
    
    //nombre de MER déposés totale (actifs)
    public function getStatMerNb($dateDeb = null,$dateFin = null, $etab = null, $groupeStat = null, $communauteCommune = null) {
 
        /*
        $qt = Doctrine_Query::create()
                ->select('COUNT(DISTINCT t.id_trajet_mise_en_relation) AS nb_mer_tot')
                ->from('TrajetMiseEnRelation t')
                //->where('t.etat = 1 ')
                ->where('t.id_site = ?', sfConfig::get('sf_id_site_client'));
        */
        
        //liste dans les etablissement fournis
        if(($etab != null && count($etab) != 0) || (count($groupeStat) != 0) || (count($communauteCommune) != 0)){
            $qt = Doctrine_Query::create()
                ->select('COUNT(DISTINCT t.id_trajet_mise_en_relation) AS nb_mer_tot')
                ->from('TrajetMiseEnRelation t, Covoitureur c')
                ->where('t.id_trajet_createur = c.id_utilisateur');
                ;
            
        }else{
            $qt = Doctrine_Query::create()
                ->select('COUNT(DISTINCT t.id_trajet_mise_en_relation) AS nb_mer_tot')
                ->from('TrajetMiseEnRelation t')
                ;
        }
        
        $qt->andWhere('t.id_site = ?', sfConfig::get('sf_id_site_client'));

        //gestion des parametres de filtre passé par le formulaire
        if ($dateDeb != null && $dateFin != null) {
           $qt->andWhere('t.date_creation BETWEEN ? AND ?', array($dateDeb, $dateFin));
        }elseif($dateDeb != null){
            $qt->andWhere('t.date_creation >= ? ', array($dateDeb));
        }elseif($dateFin != null){
            $qt->andWhere('t.date_creation <= ? ', array($dateFin));
        }
        
        //liste dans les etablissement fournis
        if($etab != null && count($etab) != 0){
            $qt->andWhereIn('c.cp_etablissement_id', $etab);
        }

        //liste dans les villes fournies (par groupe_stat)
        if($groupeStat != null && count($groupeStat) != 0) {

            $i = 0;
            $requ = '';
            foreach($groupeStat as $key => $ville) {
                $ville_new = $ville.'%';
                //$q->orWhere('c.ville LIKE ? ', $ville_new);
                if($i == 0) {
                    $requ .= 'c.ville LIKE \''.$ville_new.'\'';
                }else {
                    $requ .= ' OR c.ville LIKE  \''.$ville_new.'\'';
                }
                $i++;
            }
            $qt->andWhere($requ);

        }

        //liste dans les villes fournies (par communaute de communes)
        if($communauteCommune != null && count($communauteCommune) != 0) {
            //$q->andWhere('c.ville IN ? ', array($communauteCommune));
            $i = 0;
            $requ = '';
            foreach($communauteCommune as $key => $ville) {
                $ville_new = $ville.'%';
                //$q->orWhere('c.ville LIKE ? ', $ville_new);
                if($i == 0) {
                    $requ .= 'c.ville LIKE \''.$ville_new.'\'';
                }else {
                    $requ .= ' OR c.ville LIKE  \''.$ville_new.'\'';
                }
                $i++;
            }
            $qt->andWhere($requ);
        }
        
        $trajet = $qt->fetchArray();

        return $trajet[0]['nb_mer_tot'];
    }
    
    //nombre de MER validées totale (actifs)
    public function getStatMerVldNb($dateDeb = null,$dateFin = null, $etab = null, $groupeStat = null, $communauteCommune = null) {
 
        /*
        $qt = Doctrine_Query::create()
                ->select('COUNT(DISTINCT t.id_trajet_mise_en_relation) AS nb_mer_vld')
                ->from('TrajetMiseEnRelation t')
                ->where('t.etat = 1 ')
                ->andWhere('t.id_site = ?', sfConfig::get('sf_id_site_client'));
        */
        
        //liste dans les etablissement fournis
        if(($etab != null && count($etab) != 0) || (count($groupeStat) != 0) || (count($communauteCommune) != 0)){
            $qt = Doctrine_Query::create()
                ->select('COUNT(DISTINCT t.id_trajet_mise_en_relation) AS nb_mer_vld')
                ->from('TrajetMiseEnRelation t, Covoitureur c')
                ->where('t.id_trajet_createur = c.id_utilisateur');
                ;
            
        }else{
            $qt = Doctrine_Query::create()
                ->select('COUNT(DISTINCT t.id_trajet_mise_en_relation) AS nb_mer_vld')
                ->from('TrajetMiseEnRelation t')
                ;
        }
        
        $qt->andWhere('t.etat = 1 ');
        $qt->andWhere('t.id_site = ?', sfConfig::get('sf_id_site_client'));

        //gestion des parametres de filtre passé par le formulaire
        if ($dateDeb != null && $dateFin != null) {
           $qt->andWhere('t.date_creation BETWEEN ? AND ?', array($dateDeb, $dateFin));
        }elseif($dateDeb != null){
            $qt->andWhere('t.date_creation >= ? ', array($dateDeb));
        }elseif($dateFin != null){
            $qt->andWhere('t.date_creation <= ? ', array($dateFin));
        }
        
        //liste dans les etablissement fournis
        if($etab != null && count($etab) != 0){
            $qt->andWhereIn('c.cp_etablissement_id', $etab);
        }

        //liste dans les villes fournies (par groupe_stat)
        if($groupeStat != null && count($groupeStat) != 0) {

            $i = 0;
            $requ = '';
            foreach($groupeStat as $key => $ville) {
                $ville_new = $ville.'%';
                //$q->orWhere('c.ville LIKE ? ', $ville_new);
                if($i == 0) {
                    $requ .= 'c.ville LIKE \''.$ville_new.'\'';
                }else {
                    $requ .= ' OR c.ville LIKE  \''.$ville_new.'\'';
                }
                $i++;
            }
            $qt->andWhere($requ);

        }

        //liste dans les villes fournies (par communaute de communes)
        if($communauteCommune != null && count($communauteCommune) != 0) {
            //$q->andWhere('c.ville IN ? ', array($communauteCommune));
            $i = 0;
            $requ = '';
            foreach($communauteCommune as $key => $ville) {
                $ville_new = $ville.'%';
                //$q->orWhere('c.ville LIKE ? ', $ville_new);
                if($i == 0) {
                    $requ .= 'c.ville LIKE \''.$ville_new.'\'';
                }else {
                    $requ .= ' OR c.ville LIKE  \''.$ville_new.'\'';
                }
                $i++;
            }
            $qt->andWhere($requ);
        }
        
        $trajet = $qt->fetchArray();

        return $trajet[0]['nb_mer_vld'];
    }
    
    //nombre de MER refusées totale (actifs)
    public function getStatMerRefNb($dateDeb = null,$dateFin = null, $etab = null, $groupeStat = null, $communauteCommune = null) {
 
        
        /*$qt = Doctrine_Query::create()
                ->select('COUNT(DISTINCT t.id_trajet_mise_en_relation) AS nb_mer_ref')
                ->from('TrajetMiseEnRelation t')
                ->where('t.etat = 2 ')
                ->andWhere('t.id_site = ?', sfConfig::get('sf_id_site_client'));
        */
        
        //liste dans les etablissement fournis
        if(($etab != null && count($etab) != 0) || (count($groupeStat) != 0) || (count($communauteCommune) != 0)){
            $qt = Doctrine_Query::create()
                ->select('COUNT(DISTINCT t.id_trajet_mise_en_relation) AS nb_mer_ref')
                ->from('TrajetMiseEnRelation t, Covoitureur c')
                ->where('t.id_trajet_createur = c.id_utilisateur');
                ;
            
        }else{
            $qt = Doctrine_Query::create()
                ->select('COUNT(DISTINCT t.id_trajet_mise_en_relation) AS nb_mer_ref')
                ->from('TrajetMiseEnRelation t')
                ;
        }
        
        $qt->andWhere('t.etat = 2 ');
        $qt->andWhere('t.id_site = ?', sfConfig::get('sf_id_site_client'));

        //gestion des parametres de filtre passé par le formulaire
        if ($dateDeb != null && $dateFin != null) {
           $qt->andWhere('t.date_creation BETWEEN ? AND ?', array($dateDeb, $dateFin));
        }elseif($dateDeb != null){
            $qt->andWhere('t.date_creation >= ? ', array($dateDeb));
        }elseif($dateFin != null){
            $qt->andWhere('t.date_creation <= ? ', array($dateFin));
        }
        
        //liste dans les etablissement fournis
        if($etab != null && count($etab) != 0){
            $qt->andWhereIn('c.cp_etablissement_id', $etab);
        }

        //liste dans les villes fournies (par groupe_stat)
        if($groupeStat != null && count($groupeStat) != 0) {

            $i = 0;
            $requ = '';
            foreach($groupeStat as $key => $ville) {
                $ville_new = $ville.'%';
                //$q->orWhere('c.ville LIKE ? ', $ville_new);
                if($i == 0) {
                    $requ .= 'c.ville LIKE \''.$ville_new.'\'';
                }else {
                    $requ .= ' OR c.ville LIKE  \''.$ville_new.'\'';
                }
                $i++;
            }
            $qt->andWhere($requ);

        }

        //liste dans les villes fournies (par communaute de communes)
        if($communauteCommune != null && count($communauteCommune) != 0) {
            //$q->andWhere('c.ville IN ? ', array($communauteCommune));
            $i = 0;
            $requ = '';
            foreach($communauteCommune as $key => $ville) {
                $ville_new = $ville.'%';
                //$q->orWhere('c.ville LIKE ? ', $ville_new);
                if($i == 0) {
                    $requ .= 'c.ville LIKE \''.$ville_new.'\'';
                }else {
                    $requ .= ' OR c.ville LIKE  \''.$ville_new.'\'';
                }
                $i++;
            }
            $qt->andWhere($requ);
        }
        
        $trajet = $qt->fetchArray();

        return $trajet[0]['nb_mer_ref'];
    }
    
    //nombre de MER annulées totale (actifs)
    public function getStatMerAnnNb($dateDeb = null,$dateFin = null, $etab = null, $groupeStat = null, $communauteCommune = null) {
 
        /*
        $qt = Doctrine_Query::create()
                ->select('COUNT(DISTINCT t.id_trajet_mise_en_relation) AS nb_mer_ann')
                ->from('TrajetMiseEnRelation t')
                ->where('t.etat = 5 OR t.etat = 6')
                ->andWhere('t.id_site = ?', sfConfig::get('sf_id_site_client'));
        */
        
        //liste dans les etablissement fournis
        if(($etab != null && count($etab) != 0) || (count($groupeStat) != 0) || (count($communauteCommune) != 0)){
            $qt = Doctrine_Query::create()
                ->select('COUNT(DISTINCT t.id_trajet_mise_en_relation) AS nb_mer_ann')
                ->from('TrajetMiseEnRelation t, Covoitureur c')
                ->where('t.id_trajet_createur = c.id_utilisateur');
                ;
            
        }else{
            $qt = Doctrine_Query::create()
                ->select('COUNT(DISTINCT t.id_trajet_mise_en_relation) AS nb_mer_ann')
                ->from('TrajetMiseEnRelation t')
                ;
        }
        
        $qt->andWhere('t.etat = 5 OR t.etat = 6 ');
        $qt->andWhere('t.id_site = ?', sfConfig::get('sf_id_site_client'));

        //gestion des parametres de filtre passé par le formulaire
        if ($dateDeb != null && $dateFin != null) {
           $qt->andWhere('t.date_creation BETWEEN ? AND ?', array($dateDeb, $dateFin));
        }elseif($dateDeb != null){
            $qt->andWhere('t.date_creation >= ? ', array($dateDeb));
        }elseif($dateFin != null){
            $qt->andWhere('t.date_creation <= ? ', array($dateFin));
        }
        
        //liste dans les etablissement fournis
        if($etab != null && count($etab) != 0){
            $qt->andWhereIn('c.cp_etablissement_id', $etab);
        }

        //liste dans les villes fournies (par groupe_stat)
        if($groupeStat != null && count($groupeStat) != 0) {

            $i = 0;
            $requ = '';
            foreach($groupeStat as $key => $ville) {
                $ville_new = $ville.'%';
                //$q->orWhere('c.ville LIKE ? ', $ville_new);
                if($i == 0) {
                    $requ .= 'c.ville LIKE \''.$ville_new.'\'';
                }else {
                    $requ .= ' OR c.ville LIKE  \''.$ville_new.'\'';
                }
                $i++;
            }
            $qt->andWhere($requ);

        }

        //liste dans les villes fournies (par communaute de communes)
        if($communauteCommune != null && count($communauteCommune) != 0) {
            //$q->andWhere('c.ville IN ? ', array($communauteCommune));
            $i = 0;
            $requ = '';
            foreach($communauteCommune as $key => $ville) {
                $ville_new = $ville.'%';
                //$q->orWhere('c.ville LIKE ? ', $ville_new);
                if($i == 0) {
                    $requ .= 'c.ville LIKE \''.$ville_new.'\'';
                }else {
                    $requ .= ' OR c.ville LIKE  \''.$ville_new.'\'';
                }
                $i++;
            }
            $qt->andWhere($requ);
        }
        
        $trajet = $qt->fetchArray();

        return $trajet[0]['nb_mer_ann'];
    }
    
    //nombre de MER sans réponse totale (actifs)
    public function getStatMerSsRepNb($dateDeb = null,$dateFin = null, $etab = null, $groupeStat = null, $communauteCommune = null) {
 
        /*
        $qt = Doctrine_Query::create()
                ->select('COUNT(DISTINCT t.id_trajet_mise_en_relation) AS nb_mer_ss_rep')
                ->from('TrajetMiseEnRelation t')
                ->where('t.etat = 0 OR t.etat = 4')
                ->andWhere('t.id_site = ?', sfConfig::get('sf_id_site_client'));
        */
        
         //liste dans les etablissement fournis
        if(($etab != null && count($etab) != 0) || (count($groupeStat) != 0) || (count($communauteCommune) != 0)){
            $qt = Doctrine_Query::create()
                ->select('COUNT(DISTINCT t.id_trajet_mise_en_relation) AS nb_mer_ss_rep')
                ->from('TrajetMiseEnRelation t, Covoitureur c')
                ->where('t.id_trajet_createur = c.id_utilisateur');
                ;
            
        }else{
            $qt = Doctrine_Query::create()
                ->select('COUNT(DISTINCT t.id_trajet_mise_en_relation) AS nb_mer_ss_rep')
                ->from('TrajetMiseEnRelation t')
                ;
        }
        
        $qt->andWhere('t.etat = 0 OR t.etat = 4 ');
        $qt->andWhere('t.id_site = ?', sfConfig::get('sf_id_site_client'));

        //gestion des parametres de filtre passé par le formulaire
        if ($dateDeb != null && $dateFin != null) {
           $qt->andWhere('t.date_creation BETWEEN ? AND ?', array($dateDeb, $dateFin));
        }elseif($dateDeb != null){
            $qt->andWhere('t.date_creation >= ? ', array($dateDeb));
        }elseif($dateFin != null){
            $qt->andWhere('t.date_creation <= ? ', array($dateFin));
        }
        
        //liste dans les etablissement fournis
        if($etab != null && count($etab) != 0){
            $qt->andWhereIn('c.cp_etablissement_id', $etab);
        }

        //liste dans les villes fournies (par groupe_stat)
        if($groupeStat != null && count($groupeStat) != 0) {

            $i = 0;
            $requ = '';
            foreach($groupeStat as $key => $ville) {
                $ville_new = $ville.'%';
                //$q->orWhere('c.ville LIKE ? ', $ville_new);
                if($i == 0) {
                    $requ .= 'c.ville LIKE \''.$ville_new.'\'';
                }else {
                    $requ .= ' OR c.ville LIKE  \''.$ville_new.'\'';
                }
                $i++;
            }
            $qt->andWhere($requ);

        }

        //liste dans les villes fournies (par communaute de communes)
        if($communauteCommune != null && count($communauteCommune) != 0) {
            //$q->andWhere('c.ville IN ? ', array($communauteCommune));
            $i = 0;
            $requ = '';
            foreach($communauteCommune as $key => $ville) {
                $ville_new = $ville.'%';
                //$q->orWhere('c.ville LIKE ? ', $ville_new);
                if($i == 0) {
                    $requ .= 'c.ville LIKE \''.$ville_new.'\'';
                }else {
                    $requ .= ' OR c.ville LIKE  \''.$ville_new.'\'';
                }
                $i++;
            }
            $qt->andWhere($requ);
        }
        
        $trajet = $qt->fetchArray();

        return $trajet[0]['nb_mer_ss_rep'];
    }
}