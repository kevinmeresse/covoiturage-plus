 <?php

/**
 * LieuTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class LieuTable extends Doctrine_Table {

    /**
     * Returns an instance of this class.
     *
     * @return object LieuTable
     */
    public static function getInstance() {
        return Doctrine_Core::getTable('Lieu');
    }

    /*
     * récupération les lieux relatifs à une ville et à son code postal
     * à partir du libelle et du cp
     */
    public function getLieuSiteVille($ville = null, $cp = null) {
        if (is_null($ville) && is_null($cp)) {
            return null;
        }
        //récupération de l'id de la ville
        $idvilleResult = Doctrine_Core::getTable('VilleFr')->getIdVilleCp($ville,$cp);

        //création de la requete
        /*
        $q = Doctrine_Query::create()
            ->from('Lieu l');
        $q->andWhere('l.id_site = ?', sfConfig::get('sf_id_site_client'));
        $q->andWhere('l.id_lieu_type != ?', sfConfig::get('sf_id_lieu_evnmt'));
         * 
         */
        
        $q = Doctrine_Query::create()
             ->from('Lieu l ')
             ->innerJoin('l.LieuType lt')
                ;
            //->from('Lieu l, LieuType lt');
        $q->andWhere('l.id_lieu_type = lt.id_lieu_type');
        $q->andWhere('l.id_site = ?', sfConfig::get('sf_id_site_client'));
        $q->andWhere('lt.evenement = 0');
        
        //génération de la chaine utilisée dans la table lieu pour la ville (ex : fr-16230)
        $chaineVille = '';
        if(!is_null($idvilleResult)){
            $chaineVille = "fr-".$idvilleResult;
            $q->andWhere('l.code_insee = ?', $chaineVille);
        }

        return $q;
    }

    /*
     * récupération les lieux relatifs à une ville
     * à partir de l'id de la ville
     */
    public function getLieuSiteVilleById($villeId = null) {
        if (is_null($villeId) ) {
            return null;
        }

        //création de la requete
        /*
        $q = Doctrine_Query::create()
            ->from('Lieu l');
        $q->andWhere('l.id_site = ?', sfConfig::get('sf_id_site_client'));
        $q->andWhere('l.id_lieu_type != ?', sfConfig::get('sf_id_lieu_evnmt'));
         * 
         */
        $q = Doctrine_Query::create()
             ->from('Lieu l ')
             ->innerJoin('l.LieuType lt')
                ;
            //->from('Lieu l, LieuType lt');
        $q->andWhere('l.id_lieu_type = lt.id_lieu_type');
        $q->andWhere('l.id_site = ?', sfConfig::get('sf_id_site_client'));
        $q->andWhere('lt.evenement = 0');

        //génération de la chaine utilisée dans la table lieu pour la ville (ex : fr-16230)
        $chaineVille = '';
        if(!is_null($villeId)){
            $chaineVille = "fr-".$villeId;
            $q->andWhere('l.code_insee = ?', $chaineVille);
        }

        return $q;
    }

    //filtrage des lieux en fonction du site (id_site)
    //et en fonction du type de lieu qui ne doit pas etre un evenement (evenement=0)
    public function getLieuSite(Doctrine_Query $q = null) {
        if (is_null($q)) {
            $q = Doctrine_Query::create()
            ->from('Lieu l');
        }
        $q->innerJoin('l.LieuType lt');
        $q->where('lt.evenement = 0');

        $q->andWhere('l.id_site = ?', sfConfig::get('sf_id_site_client'));

        return $q;
    }
    
    //filtrage des lieux en fonction du site (id_site)
    //et en fonction du type de lieu qui  doit  etre un evenement (evenement=1)
    public function getLieuEvenementSite(Doctrine_Query $q = null) {
        if (is_null($q)) {
            $q = Doctrine_Query::create()
            ->from('Lieu l');
        }
        $q->innerJoin('l.LieuType lt');
        $q->where('lt.evenement = 1');

        $q->andWhere('l.id_site = ?', sfConfig::get('sf_id_site_client'));

        return $q;
    }
    
    //filtrage des lieux de type "lieu" en fonction du site (id_site)
    public function getLieuLieuSite(Doctrine_Query $q = null) {
        if (is_null($q)) {
            $q = Doctrine_Query::create()
            ->from('Lieu l')
            ;
        }
        
         $q->innerJoin('l.LieuType lt');
        $q->where('lt.evenement = 0');

        $q->andWhere('l.id_site = ?', sfConfig::get('sf_id_site_client'));
        $q->andWhere('l.id_lieu_type = ?', sfConfig::get('sf_id_lieu_lieu'));

        return $q;
    }
    
    //filtrage des lieux de type "Aire" en fonction du site (id_site)
    public function getLieuAireSite(Doctrine_Query $q = null) {
        if (is_null($q)) {
            $q = Doctrine_Query::create()
            ->from('Lieu l')
            ;
        }

        $q->andWhere('l.id_site = ?', sfConfig::get('sf_id_site_client'));
        $q->andWhere('l.id_lieu_type = ?', sfConfig::get('sf_id_lieu_aire'));

        return $q;
    }
    
    //filtrage des lieux de type "ZI" en fonction du site (id_site)
    public function getLieuZISite(Doctrine_Query $q = null) {
        if (is_null($q)) {
            $q = Doctrine_Query::create()
            ->from('Lieu l')
            ;
        }

        $q->andWhere('l.id_site = ?', sfConfig::get('sf_id_site_client'));
        $q->andWhere('l.id_lieu_type = ?', sfConfig::get('sf_id_lieu_zi'));

        return $q;
    }
    
     /*
     * récupération les lieux relatifs à une ville
     * à partir de l'id de la ville
     */
    public function getLieuZISiteById($villeId = null) {
        if (is_null($villeId) ) {
            return null;
        }

        //création de la requete
        /*
        $q = Doctrine_Query::create()
            ->from('Lieu l');
        $q->andWhere('l.id_site = ?', sfConfig::get('sf_id_site_client'));
        $q->andWhere('l.id_lieu_type != ?', sfConfig::get('sf_id_lieu_evnmt'));
         * 
         */
        $q = Doctrine_Query::create()
             ->from('Lieu l ')
             //->innerJoin('l.LieuType lt')
                ;
            //->from('Lieu l, LieuType lt');
        $q->andWhere('l.id_lieu_type = ?',sfConfig::get('sf_id_lieu_zi'));
        $q->andWhere('l.id_site = ?', sfConfig::get('sf_id_site_client'));
        //$q->andWhere('lt.evenement = 0');

        //génération de la chaine utilisée dans la table lieu pour la ville (ex : fr-16230)
        $chaineVille = '';
        if(!is_null($villeId)){
            $chaineVille = "fr-".$villeId;
            $q->andWhere('l.code_insee = ?', $chaineVille);
        }

        return $q;
    }
    
    //filtrage des lieux de type "evenenemnt" en fonction du site (id_site)
    public function getLieuEvnmtSite(Doctrine_Query $q = null) {
        if (is_null($q)) {
            $q = Doctrine_Query::create()
            ->from('Lieu l')            
            ;
        }

        $q->andWhere('l.id_site = ?', sfConfig::get('sf_id_site_client'));
        $q->andWhere('l.id_lieu_type = ?', sfConfig::get('sf_id_lieu_evnmt'));

        return $q;
    }
    
    //récupération des lieux de type "lieu" en fonction de la ville du code postal et de la zone
    public function getLieuRechercheSite(Doctrine_Query $q = null,$ville=null, $villeId=null, $id_lieu_type = null) {
        if (is_null($q)) {
            $q = Doctrine_Query::create()
            ->from('Lieu l')            
            ;
        }

        $q->andWhere('l.id_site = ?', sfConfig::get('sf_id_site_client'));
        
        
        //gestion des types de lieu autre que évènement
        if( $id_lieu_type != 0 && !is_null($id_lieu_type)){
            $q->andWhere('l.id_lieu_type = ?', $id_lieu_type);
        }else{
            $q->andWhere('l.id_lieu_type != ?', sfConfig::get('sf_id_lieu_evnmt'));
        }
        
        
        //gestion de la ville
        $chaineVille = '';
        if( $villeId != 0){
            $chaineVille = "fr-".$villeId;
            $q->andWhere('l.code_insee = ?', $chaineVille);
        }  elseif ($ville != '') {
            $outil = new Util();
            $chaine = $outil->extractCpLibelle($ville);
            $villeIdNew = Doctrine_Core::getTable('VilleFr')->getIdVille($chaine);
            $chaineVille = "fr-".$villeIdNew;
            $q->andWhere('l.code_insee = ?', $chaineVille);

        }


        return $q;
    }
    
    /**
     * Get all locations linked to a specific city
     * 
     * @param string $cityName The string containing the name of the city and eventually the postal code
     * @return array An array with 'Lieu' objects
     * @example Input 'Brest (29200)' and you'll have an array of locations in return
     * 
     * @author Kevin Meresse
     */
    public static function getLocationsFromCityName($cityName) {
        // Extract city and postal code from request
        $tab = Util::splitCityAndPostalCode($cityName);
        $city = $tab[0];
        $postalCode = $tab[1];
        
        // Retrieve city id from city name and eventually postal code
        $cityQuery = Doctrine_Query::create()
                        ->select('v.id_ville')
                        ->from('VilleFr v')
                        ->where('nom_ville = ?', $city);
        
        if ($postalCode != '') {
            $cityQuery  ->andWhere('code_postal = ?', $postalCode);
        }
        $result = $cityQuery->fetchOne();
        $cityId = $result['id_ville'];
        
        // Creation of INSEE code from the city id (format: fr-16230)
        $inseeCode = '';
        if(!is_null($cityId)){
            $inseeCode = "fr-".$cityId;
        }
        
        // If we found a city, retrieve all locations linked to it
        if($inseeCode != ''){
            $locationQuery = Doctrine_Query::create()
                                ->select('l.id_lieu, l.libelle_lieu, lt.libelle_lieu_type as type_lieu')
                                ->from('Lieu l ')
                                ->innerJoin('l.LieuType lt')
                                ->andWhere('l.id_lieu_type = lt.id_lieu_type')
                                ->andWhere('l.id_site = ?', sfConfig::get('sf_id_site_client'))
                                ->andWhere('lt.evenement = 0')
                                ->andWhere('l.code_insee = ?', $inseeCode);
        
            return $locationQuery->fetchArray();
        }
        
        return null;
    }
    
    /**
     * Get all locations linked to a specific city
     * 
     * @param string $inseeCode The string containing the INSEE code of the city
     * @return array The query to fetch for 'Lieu' objects
     * @example Input 'fr-11969' and you'll have a query in return
     * 
     * @author Kevin Meresse
     */
    public static function getQueryLocationsFromCityInsee($inseeCode = null) {
        if($inseeCode != null && $inseeCode != ''){
            $locationQuery = Doctrine_Query::create()
                                ->select('l.id_lieu, l.libelle_lieu, lt.libelle_lieu_type as type_lieu')
                                ->from('Lieu l ')
                                ->innerJoin('l.LieuType lt')
                                ->andWhere('l.id_lieu_type = lt.id_lieu_type')
                                ->andWhere('l.id_site = ?', sfConfig::get('sf_id_site_client'))
                                ->andWhere('lt.evenement = 0')
                                ->andWhere('l.code_insee = ?', $inseeCode);
        
            return $locationQuery;
        }
        
        return null;
    }
    
    /**
     * Get all locations linked to a specific city forformulaire recherche
     * 
     * @param string $cityName The string containing the name of the city and eventually the postal code
     * @return query
     * @example Input 'Brest (29200)' and you'll have an array of locations in return
     * 
     * @author Kevin Meresse
     */
    public static function getLocationsFromCityIdForRecherche($cityId) {

        
        // Creation of INSEE code from the city id (format: fr-16230)
        $inseeCode = '';
        if(!is_null($cityId)){
            $inseeCode = "fr-".$cityId;
        }
        
        // If we found a city, retrieve all locations linked to it
        if($inseeCode != ''){
            $locationQuery = Doctrine_Query::create()
                                //->select('l.id_lieu, l.libelle_lieu, lt.libelle_lieu_type as type_lieu')
                                ->from('Lieu l ')
                                ->innerJoin('l.LieuType lt')
                                ->andWhere('l.id_lieu_type = lt.id_lieu_type')
                                ->andWhere('l.id_site = ?', sfConfig::get('sf_id_site_client'))
                                ->andWhere('lt.evenement = 0')
                                ->andWhere('l.code_insee = ?', $inseeCode);
        
            return $locationQuery;
        }
        
        return null;
        
        
    }

}